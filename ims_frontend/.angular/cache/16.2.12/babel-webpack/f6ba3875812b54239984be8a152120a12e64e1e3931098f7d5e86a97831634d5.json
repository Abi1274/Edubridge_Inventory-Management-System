{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    router;\n    baseUrl = 'http://localhost:8080/api/auth'; // Your backend auth URL\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    }\n    login(username, password) {\n      console.log(username, password);\n      return this.http.post(`${this.baseUrl}/login`, {\n        username,\n        password\n      });\n    }\n    register(username, password) {\n      return this.http.post(`${this.baseUrl}/register`, {\n        username,\n        password\n      });\n    }\n    logout() {\n      sessionStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }\n    setToken(token) {\n      sessionStorage.setItem('token', token);\n    }\n    getToken() {\n      return sessionStorage.getItem('token');\n    }\n    isLoggedIn() {\n      return this.getToken() !== null;\n    }\n    getAuthHeaders() {\n      const token = this.getToken();\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      });\n    }\n    static ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}