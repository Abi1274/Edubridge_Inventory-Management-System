{"ast":null,"code":"import { __decorate } from \"tslib\";\n// sales.component.ts\nimport { Component } from '@angular/core';\nexport let SalesComponent = class SalesComponent {\n  salesService;\n  sales = [];\n  editingId = null;\n  newSale = {\n    invoiceNumber: '',\n    customerName: '',\n    productName: '',\n    quantity: 1,\n    totalPrice: 0,\n    saleDate: new Date().toISOString().substring(0, 10)\n  };\n  constructor(salesService) {\n    this.salesService = salesService;\n  }\n  ngOnInit() {\n    this.loadSales();\n  }\n  loadSales() {\n    this.salesService.getAll().subscribe(data => this.sales = data);\n  }\n  calculateTotal() {\n    // e.g. if you had a unitPrice field you could do:\n    // this.newSale.totalPrice = this.newSale.unitPrice * this.newSale.quantity;\n  }\n  onSubmit() {\n    if (this.editingId !== null) {\n      this.salesService.updateSale(this.editingId, this.newSale).subscribe(() => this.afterSave());\n    } else {\n      this.salesService.add(this.newSale).subscribe(() => this.afterSave());\n    }\n  }\n  afterSave() {\n    this.loadSales();\n    this.resetForm();\n    this.editingId = null;\n  }\n  editSale(s) {\n    this.editingId = s.id;\n    this.newSale = {\n      ...s\n    };\n  }\n  deleteSale(id) {\n    if (!id) return;\n    this.salesService.delete(id).subscribe(() => this.loadSales());\n  }\n  resetForm() {\n    this.newSale = {\n      invoiceNumber: '',\n      customerName: '',\n      productName: '',\n      quantity: 1,\n      totalPrice: 0,\n      saleDate: new Date().toISOString().substring(0, 10)\n    };\n  }\n};\nSalesComponent = __decorate([Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css']\n})], SalesComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}