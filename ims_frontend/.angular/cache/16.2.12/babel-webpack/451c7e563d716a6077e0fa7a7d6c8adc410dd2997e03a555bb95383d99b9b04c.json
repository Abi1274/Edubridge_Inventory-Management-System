{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    fb;\n    auth;\n    router;\n    loginForm;\n    errMessage = '';\n    successMessage = '';\n    constructor(fb, auth, router) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.loginForm = this.fb.group({\n        emailid: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(4)]]\n      });\n    }\n    login() {\n      if (this.loginForm.invalid) {\n        this.errMessage = 'Please fill out the form correctly.';\n        this.successMessage = '';\n        return;\n      }\n      const {\n        emailid,\n        password\n      } = this.loginForm.value;\n      this.auth.login(emailid, password).subscribe({\n        next: res => {\n          this.auth.setToken(res.token);\n          this.successMessage = 'Login successful!';\n          this.errMessage = '';\n          this.router.navigate(['/dashboard']);\n        },\n        error: err => {\n          this.errMessage = err.error?.message || 'Login failed. Please try again later.';\n          this.successMessage = '';\n        }\n      });\n    }\n    static ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 12,\n      vars: 3,\n      consts: [[1, \"container\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"style\", \"color: red; margin-top: 10px;\", 4, \"ngIf\"], [2, \"color\", \"red\", \"margin-top\", \"10px\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(4, \"div\")(5, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\")(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\")(9, \"button\", 4);\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n      styles: [\".login-container[_ngcontent-%COMP%]{max-width:400px;margin:80px auto;padding:40px 30px;background:#ffffff;border-radius:12px;box-shadow:0 8px 16px #0000001a;text-align:center;font-family:Segoe UI,sans-serif}h2[_ngcontent-%COMP%]{margin-bottom:20px;color:#333}.input-group[_ngcontent-%COMP%]{margin-bottom:20px}input[type=text][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{width:100%;padding:12px 15px;font-size:16px;border:1px solid #ccc;border-radius:8px;transition:border-color .3s,box-shadow .3s}input[_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 6px #007bff33;outline:none}.login-button[_ngcontent-%COMP%]{width:100%;padding:12px;background-color:#007bff;color:#fff;font-size:16px;border:none;border-radius:8px;cursor:pointer;transition:background-color .3s ease}.login-button[_ngcontent-%COMP%]:hover{background-color:#0056b3}.error-message[_ngcontent-%COMP%]{color:#d9534f;margin-top:15px;font-size:14px}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}