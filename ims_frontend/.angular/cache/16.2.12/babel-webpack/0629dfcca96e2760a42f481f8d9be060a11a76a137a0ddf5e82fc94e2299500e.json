{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/sales.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SalesComponent_tr_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SalesComponent_tr_50_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const s_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteSale(s_r1.id));\n    });\n    i0.ɵɵtext(17, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const s_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.invoiceNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.customerName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.totalPrice);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(s_r1.saleDate);\n  }\n}\nexport let SalesComponent = /*#__PURE__*/(() => {\n  class SalesComponent {\n    salesService;\n    sales = [];\n    newSale = {\n      invoiceNumber: '',\n      customerName: '',\n      productName: '',\n      quantity: 1,\n      totalPrice: 0,\n      saleDate: new Date().toISOString().substring(0, 10)\n    };\n    constructor(salesService) {\n      this.salesService = salesService;\n    }\n    ngOnInit() {\n      this.loadSales();\n    }\n    /** Fetch current sales from the database */\n    loadSales() {\n      this.salesService.getAll().subscribe(data => this.sales = data);\n    }\n    /** Recalculate total if you have to derive it from unit price */\n    calculateTotal() {\n      // optional logic here\n    }\n    /** Save a new sale */\n    addSales() {\n      this.salesService.add(this.newSale).subscribe(() => {\n        this.loadSales();\n        this.resetForm();\n      });\n    }\n    /** Delete a sale by ID */\n    deleteSale(id) {\n      if (!id) return;\n      this.salesService.delete(id).subscribe(() => this.loadSales());\n    }\n    /** Reset the form to its initial state */\n    resetForm() {\n      this.newSale = {\n        invoiceNumber: '',\n        customerName: '',\n        productName: '',\n        quantity: 1,\n        totalPrice: 0,\n        saleDate: new Date().toISOString().substring(0, 10)\n      };\n    }\n    static ɵfac = function SalesComponent_Factory(t) {\n      return new (t || SalesComponent)(i0.ɵɵdirectiveInject(i1.SalesService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SalesComponent,\n      selectors: [[\"app-sales\"]],\n      decls: 51,\n      vars: 7,\n      consts: [[1, \"container-wrap\"], [1, \"main-content\"], [1, \"container\"], [1, \"page-title\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"invoiceNumber\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"customerName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"productName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"quantity\", \"min\", \"1\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"type\", \"number\", \"name\", \"totalPrice\", \"min\", \"0\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"saleDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [1, \"table-responsive\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n      template: function SalesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \"Record a Sale\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function SalesComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.addSales();\n          });\n          i0.ɵɵelementStart(6, \"label\");\n          i0.ɵɵtext(7, \"Invoice Number:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.newSale.invoiceNumber = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"label\");\n          i0.ɵɵtext(10, \"Customer Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.newSale.customerName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"label\");\n          i0.ɵɵtext(13, \"Product Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.newSale.productName = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"label\");\n          i0.ɵɵtext(16, \"Quantity:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"input\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.newSale.quantity = $event;\n          })(\"input\", function SalesComponent_Template_input_input_17_listener() {\n            return ctx.calculateTotal();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"label\");\n          i0.ɵɵtext(19, \"Total Price (\\u20B9):\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_20_listener($event) {\n            return ctx.newSale.totalPrice = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"label\");\n          i0.ɵɵtext(22, \"Sale Date:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"input\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function SalesComponent_Template_input_ngModelChange_23_listener($event) {\n            return ctx.newSale.saleDate = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"button\", 11);\n          i0.ɵɵtext(25, \"Save Sale\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(26, \"hr\");\n          i0.ɵɵelementStart(27, \"div\", 3);\n          i0.ɵɵtext(28, \"Sales History\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 12)(30, \"table\")(31, \"thead\")(32, \"tr\")(33, \"th\");\n          i0.ɵɵtext(34, \"#\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"th\");\n          i0.ɵɵtext(36, \"Invoice\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"th\");\n          i0.ɵɵtext(38, \"Customer\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"th\");\n          i0.ɵɵtext(40, \"Product\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"th\");\n          i0.ɵɵtext(42, \"Qty\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"th\");\n          i0.ɵɵtext(44, \"Total (\\u20B9)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"th\");\n          i0.ɵɵtext(46, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"th\");\n          i0.ɵɵtext(48, \"Action\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(49, \"tbody\");\n          i0.ɵɵtemplate(50, SalesComponent_tr_50_Template, 18, 7, \"tr\", 13);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.invoiceNumber);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.customerName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.productName);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.quantity);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.totalPrice);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.newSale.saleDate);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngForOf\", ctx.sales);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinValidator, i3.NgModel, i3.NgForm],\n      styles: [\".sales-container[_ngcontent-%COMP%]{max-width:500px;margin:50px auto;padding:20px;background:#ffffff;border-radius:10px;box-shadow:0 4px 20px #0000001a}.sales-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px}.sales-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.sales-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;margin-top:10px}.sales-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .sales-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:8px;margin-top:5px;border:1px solid #ccc;border-radius:5px;font-size:1rem}.sales-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:15px;padding:10px;background-color:#1976d2;color:#fff;border:none;border-radius:5px;cursor:pointer;font-size:1rem}.sales-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#1565c0}.sales-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] + button[_ngcontent-%COMP%]{margin-left:10px;background-color:#9e9e9e}.sales-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] + button[_ngcontent-%COMP%]:hover{background-color:#757575}.sales-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:30px}.sales-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .sales-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #ddd;padding:10px;text-align:center}.sales-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#1976d2;color:#fff}.sales-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f9f9f9}.sales-table[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;margin:2px;font-size:.9rem;border:none;border-radius:4px;cursor:pointer;color:#fff}.sales-table[_ngcontent-%COMP%]   button.edit-btn[_ngcontent-%COMP%]{background-color:#0288d1}.sales-table[_ngcontent-%COMP%]   button.edit-btn[_ngcontent-%COMP%]:hover{background-color:#0277bd}.sales-table[_ngcontent-%COMP%]   button.delete-btn[_ngcontent-%COMP%]{background-color:#d32f2f}.sales-table[_ngcontent-%COMP%]   button.delete-btn[_ngcontent-%COMP%]:hover{background-color:#c62828}\"]\n    });\n  }\n  return SalesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}